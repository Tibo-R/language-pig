'fileTypes': [
  'pig'
  'piglet'
]
'name': 'Pig'
'patterns': [
  {
    'match': '\\b(?i:all|and|as|asc|by|cube|cogroup|cross|debug|default_parallel|define|dense|desc|describe|distinct|dump|explain|filter|flatten|foreach|generate|group|if|illustrate|inner|into|is|job.name|join|limit|load|mapreduce|matches|not|null|or|order|outer|parallel|rank|register|sample|set|split|store|stream|stream.skippath|through|union|using)\\b'
    'name': 'keyword.operator.pig'
  }
  {
    'begin': '--'
    'end': '$'
    'name': 'comment.line.double-dash.pig'
  }
  {
    'begin': '/\\*'
    'end': '\\*/'
    'name': 'comment.block.pig'
  }
  {
    'begin': '\''
    'end': '\''
    'name': 'string.quoted.single.pig'
    'patterns': [
      {
        'match': '(\\$)[a-zA-Z]([a-zA-Z0-9_]*)'
        'name': 'variable.other.pig'
      }
    ]
  }
  {
    'match': '(\\$)[a-zA-Z]([a-zA-Z0-9_]*)'
    'name': 'variable.other.pig'
  }
  {
    'match': '(\\$)[0-9]+'
    'name': 'variable.language.pig'
  }
  {
    'match': '\\b(bag|bytearray|boolean|chararray|datetime|double|float|int|long|map|tuple)\\b'
    'name': 'constant.language.pig'
  }
  {
    'match': '^(%declare|%default)\\s'
    'name': 'keyword.control.import.pig'
  }
  {
    'match': '\\b((([0-9]+\\.?[0-9]*)|(\\.[0-9]+))((e|E)(\\+|-)?[0-9]+)?)(L|l|F|f)?\\b'
    'name': 'constant.numeric.pig'
  }
  {
    'captures':
      '1':
        'name': 'entity.name.function.pig'
    'match': '\\b([a-zA-Z0-9_\\.]*?)\\('
  }
]
'scopeName': 'source.pig'
