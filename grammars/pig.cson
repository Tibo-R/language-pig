{
    "fileTypes": [
        "pig"
    ]
    "name": "Pig"
    "patterns": [
        {
            "begin": "/\\*"
            "end": "\\*/"
            "name": "comment.block.pig"
        }
        {
            "match": "(--).*$\\n?"
            "name": "comment.line.double-dash.asciidoc"
        }
        {
            "match": "\\b(?i:ASSERT|LOAD|STORE|DUMP|FILTER|DISTINCT|FOREACH|GENERATE|STREAM|JOIN|COGROUP|GROUP|CROSS|ORDER|LIMIT|UNION|SPLIT|DESCRIBE|EXPLAIN|ILLUSTRATE|AS|BY|INTO|USING|LIMIT|PARALLEL|OUTER|INNER|DEFAULT|LEFT|SAMPLE|RANK|CUBE|ALL|KILL|QUIT|MAPREDUCE|ASC|DESC|THROUGH|SHIP|CACHE|DECLARE|CASE|WHEN|THEN|END|IN|PARTITION|FULL|IF|ONSCHEMA|INPUT|OUTPUT|RETURNS|DEFINE)\\b"
            "name": "keyword.control.pig"
        }
        {
            "match": "\\b(?i:int|long|float|double|chararray|bytearray|boolean|datetime|biginteger|bigdecimal|tuple|bag|map)\\b"
            "name": "storage.datatypes.pig"
        }
        {
            "match": "\\b(PigStorage|BinStorage|BinaryStorage|PigDump|HBaseStorage|JsonLoader|JsonStorage|AvroStorage|TextLoader|PigStreaming|TrevniStorage|AccumuloStorage)\\b"
            "name": "support.function.storage.pig"
        }
        {
            "match": "\\b(DIFF|TOBAG|TOMAP|TOP|TOTUPLE|RANDOM|FLATTEN|flatten|CUBE|ROLLUP|IsEmpty|ARITY|PluckTuple|SUBTRACT|BagToString|ABS|ACOS|ASIN|ATAN|CBRT|CEIL|COS|COSH|EXP|FLOOR|LOG|LOG10|ROUND|ROUND_TO|SIN|SINH|SQRT|TAN|TANH|AVG|COUNT|COUNT_STAR|MAX|MIN|SUM|COR|COV)\\b"
            "name": "support.function.pig"
        }
        {
            "match": "\\b(CONCAT|INDEXOF|LAST_INDEX_OF|LCFIRST|LOWER|REGEX_EXTRACT|REGEX_EXTRACT_ALL|REPLACE|SIZE|STRSPLIT|SUBSTRING|TOKENIZE|TRIM|UCFIRST|UPPER|LTRIM|RTRIM|ENDSWITH|STARTSWITH|TRIM)\\b"
            "name": "support.function.udf.string.pig"
        }
        {
            "match": "\\b(AddDuration|CurrentTime|DaysBetween|GetDay|GetHour|GetMilliSecond|GetMinute|GetMonth|GetSecond|GetWeek|GetWeekYear|GetYear|HoursBetween|MilliSecondsBetween|MinutesBetween|MonthsBetween|SecondsBetween|SubtractDuration|ToDate|WeeksBetween|YearsBetween|ToMilliSeconds|ToString|ToUnixTime)\\b"
            "name" : "entity.name.function.pig"
        }
        {
            "match": "\\b(cat|cd|copyFromLocal|copyToLocal|cp|ls|mkdir|mv|pwd|rm)\\b"
            "name": "support.function.command.pig"
        }
        {
            "match": "\\$[a-zA-Z0-9_]+"
            "name": "parameter.variable.pig"
        }
        {
            "match": "(?i)\\b(NULL|true|false|stdin|stdout|stderr|BLOCK)\\b"
            "name" : "constant.language.pig"
        }
        {
            "match": "\\b\\d+(\\.\\d+)?\\b"
            "name" : "constant.numeric.pig"
        }
        {
            "match": "(?i)!=|==|<|>|<=|>=|(?:\\b(?:MATCHES|IS|OR|AND|NOT)\\b)"
            "name": "keyword.operator.comparison.pig"
        }
        {
            "match": "(\\+|\\-|\\*|\\/|\\%|\\?|:|::|\\.\\.|#)"
            "name": "keyword.operator.arithmetic.pig"
        }
        {
            "begin": "\""
            "end": "\""
            "name": "string.quoted.double.pig"
            "patterns": [
                {
                    "match": "\\\\."
                    "name": "constant.character.escape.pig"
                }
            ]
        }
        {
            "begin": "'"
            "end": "'"
            "name": "string.quoted.single.pig"
            "patterns": [
                {
                    "match": "\\\\."
                    "name": "constant.character.escape.pig"
                }
            ]
        }
        {
            "captures":
                "1":
                    "name": "storage.type.variable.pig"
            "match": "(?i)^\\s*([a-z_][a-z0-9_]*)\\s*(?:=)"
        }
        {
            "begin": "(?i)^\\s*(set)\\s+(\\S+)"
            "end": "$"
            "beginCaptures":
                "1" :
                    "name" : "keyword.parameter.pig"
                "2" :
                    "name" : "storage.type.parameter.pig"
            "patterns": [
                { "include": "$self" }
            ]
        }
        {
            "captures":
                "1":
                    "name": "keyword.alias.pig"
                "2":
                    "name": "storage.type.alias.pig"
                "3":
                    "name": "keyword.alias.pig"
                "4":
                    "name": "variable.parameter.pig"
                "5":
                    "name": "keyword.alias.pig"
                "6":
                    "name": "entity.name.function.pig"
            "match": "(?i)\\s*(REGISTER)\\s+(\\S+)\\s*(USING)\\s+(\\S+)\\s*(AS)\\s*([a-zA-Z0-9_\\.]*?)\\s*;"
        }
        {
            "captures":
                "1":
                    "name": "keyword.alias.pig"
                "2":
                    "name": "storage.type.alias.pig"
            "match": "(?i)\\s*(DEFINE|DECLARE|REGISTER|IMPORT)\\s+(\\S+)\\s*;"
        }
        {
            'begin': '\\b([a-zA-Z0-9_\\.]+?)\\('
            'beginCaptures':
              '1':
                'name': 'entity.name.function.pig'
            'end': '(?=\\))'
            'patterns': [
              {
                'include': '$self'
              }
              {
                'captures':
                  '1':
                    'name': 'variable.parameter.function.pig'
                  '2':
                    'name': 'punctuation.separator.parameters.pig'
                'match': '\\b([a-zA-Z_][a-zA-Z_0-9]*)\\s*(?:(,)|(?=[\\n\\)]))'
                "patterns": [
                    { "include": "$self" }
                ]
              }
            ]
        }
    ]
    "scopeName": "source.pig"
}
